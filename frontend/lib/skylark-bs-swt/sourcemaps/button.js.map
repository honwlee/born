{"version":3,"sources":["button.js"],"names":["define","langx","browser","eventer","noder","geom","velm","$","sbswt","Plugin","option","this","each","$this","wgt","data","options","Button","toggle","setState","WidgetBase","inherit","klassName","init","element","$el","$element","mixin","DEFAULTS","isLoading","closest","on","proxy","e","target","is","preventDefault","$btn","trigger","find","first","state","d","val","resetText","setTimeout","addClass","attr","prop","removeClass","removeAttr","changed","$parent","length","$input","hasClass","toggleClass","VERSION","loadingText","old","fn","button","Constructor","noConflict"],"mappings":";;;;;;;AAAAA,QACE,sBACA,wBACA,wBACA,sBACA,qBACA,qBACA,sBACA,WACA,SAASC,EAAMC,EAAQC,EAAQC,EAAMC,EAAKC,EAAKC,EAAEC,GAUjD,YA2FA,SAASC,GAAOC,GACd,MAAOC,MAAKC,KAAK,WACf,GAAIC,GAAUN,EAAEI,MACZG,EAASD,EAAME,KAAK,aACpBC,EAA2B,gBAAVN,IAAsBA,CAEtCI,IACHD,EAAME,KAAK,YAAcD,EAAM,GAAIG,GAAON,KAAMK,IAGpC,UAAVN,EACFI,EAAII,SACKR,GACTI,EAAIK,SAAST,KAnGnB,GAAIO,GAAST,EAAMS,OAAST,EAAMY,WAAWC,SAC3CC,UAAW,SAEXC,KAAO,SAASC,EAAQR,GACtB,GAAIS,GAAMd,KAAKe,SAAYnB,EAAEiB,EAC7Bb,MAAKK,QAAYf,EAAM0B,SAAUV,EAAOW,SAAUZ,GAClDL,KAAKkB,WAAY,EAEbJ,EAAIK,QAAQ,4BACdL,EAAIM,GAAG,2BAA2B9B,EAAM+B,MAAM,SAASC,GAGrD,GAFAtB,KAAKO,UAECX,EAAE0B,EAAEC,QAAQC,GAAG,+CAAiD,CAEpEF,EAAEG,gBAEF,IAAIC,GAAO1B,KAAKe,QACZW,GAAKF,GAAG,gBACVE,EAAKC,QAAQ,SAEbD,EAAKE,KAAK,gCAAgCC,QAAQF,QAAQ,WAG9D3B,QAINQ,SAAW,SAAUsB,GACnB,GAAIC,GAAO,WACPjB,EAAOd,KAAKe,SACZiB,EAAOlB,EAAIU,GAAG,SAAW,MAAQ,OACjCpB,EAAOU,EAAIV,MAEf0B,IAAS,OAEa,MAAlB1B,EAAK6B,WAAmBnB,EAAIV,KAAK,YAAaU,EAAIkB,MAGtDE,WAAW5C,EAAM+B,MAAM,WACrBP,EAAIkB,GAAoB,MAAf5B,EAAK0B,GAAiB9B,KAAKK,QAAQyB,GAAS1B,EAAK0B,IAE7C,eAATA,GACF9B,KAAKkB,WAAY,EACjBJ,EAAIqB,SAASJ,GAAGK,KAAKL,EAAGA,GAAGM,KAAKN,GAAG,IAC1B/B,KAAKkB,YACdlB,KAAKkB,WAAY,EACjBJ,EAAIwB,YAAYP,GAAGQ,WAAWR,GAAGM,KAAKN,GAAG,KAE1C/B,MAAO,IAGZO,OAAS,WACP,GAAIiC,IAAU,EACVC,EAAUzC,KAAKe,SAASI,QAAQ,0BAEpC,IAAIsB,EAAQC,OAAQ,CAClB,GAAIC,GAAS3C,KAAKe,SAASa,KAAK,QACL,UAAvBe,EAAON,KAAK,SACVM,EAAON,KAAK,aAAYG,GAAU,GACtCC,EAAQb,KAAK,WAAWU,YAAY,UACpCtC,KAAKe,SAASoB,SAAS,WACS,YAAvBQ,EAAON,KAAK,UAChBM,EAAON,KAAK,aAAgBrC,KAAKe,SAAS6B,SAAS,YAAWJ,GAAU,GAC7ExC,KAAKe,SAAS8B,YAAY,WAE5BF,EAAON,KAAK,UAAWrC,KAAKe,SAAS6B,SAAS,WAC1CJ,GAASG,EAAOhB,QAAQ,cAE5B3B,MAAKe,SAASqB,KAAK,gBAAiBpC,KAAKe,SAAS6B,SAAS,WAC3D5C,KAAKe,SAAS8B,YAAY,YAMhCvC,GAAOwC,QAAW,QAElBxC,EAAOW,UACL8B,YAAa,aA0Bf,IAAIC,GAAMpD,EAAEqD,GAAGC,MAmCf,OAjCAtD,GAAEqD,GAAGC,OAAqBpD,EAC1BF,EAAEqD,GAAGC,OAAOC,YAAc7C,EAM1BV,EAAEqD,GAAGC,OAAOE,WAAa,WAEvB,MADAxD,GAAEqD,GAAGC,OAASF,EACPhD,MAwBFJ,EAAEqD,GAAGC","file":"../button.js","sourcesContent":["define([\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"./sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,sbswt){\n\n/* ========================================================================\n * Bootstrap: button.js v3.3.7\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = sbswt.Button = sbswt.WidgetBase.inherit({\n    klassName: \"Button\",\n\n    init : function(element,options) {\n      var $el = this.$element  = $(element)\n      this.options   = langx.mixin({}, Button.DEFAULTS, options)\n      this.isLoading = false\n\n      if ($el.closest('[data-toggle^=\"button\"]')) {\n        $el.on(\"click.bs.button.data-api\",langx.proxy(function(e){\n          this.toggle()\n\n          if (!($(e.target).is('input[type=\"radio\"], input[type=\"checkbox\"]'))) {\n            // Prevent double click on radios, and the double selections (so cancellation) on checkboxes\n            e.preventDefault()\n            // The target component still receive the focus\n            var $btn = this.$element; \n            if ($btn.is('input,button')) {\n              $btn.trigger('focus');\n            } else {\n              $btn.find('input:visible,button:visible').first().trigger('focus');\n            }\n          }\n        },this));\n      }\n    },\n\n    setState : function (state) {\n      var d    = 'disabled'\n      var $el  = this.$element\n      var val  = $el.is('input') ? 'val' : 'html'\n      var data = $el.data()\n\n      state += 'Text'\n\n      if (data.resetText == null) $el.data('resetText', $el[val]())\n\n      // push to event loop to allow forms to submit\n      setTimeout(langx.proxy(function () {\n        $el[val](data[state] == null ? this.options[state] : data[state])\n\n        if (state == 'loadingText') {\n          this.isLoading = true\n          $el.addClass(d).attr(d, d).prop(d, true)\n        } else if (this.isLoading) {\n          this.isLoading = false\n          $el.removeClass(d).removeAttr(d).prop(d, false)\n        }\n      }, this), 0)\n    },\n\n    toggle : function () {\n      var changed = true\n      var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n      if ($parent.length) {\n        var $input = this.$element.find('input')\n        if ($input.prop('type') == 'radio') {\n          if ($input.prop('checked')) changed = false\n          $parent.find('.active').removeClass('active')\n          this.$element.addClass('active')\n        } else if ($input.prop('type') == 'checkbox') {\n          if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\n          this.$element.toggleClass('active')\n        }\n        $input.prop('checked', this.$element.hasClass('active'))\n        if (changed) $input.trigger('change')\n      } else {\n        this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n        this.$element.toggleClass('active')\n      }\n    }\n\n  });  \n\n  Button.VERSION  = '3.3.7'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var wgt    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!wgt) {\n        $this.data('bs.button', (wgt = new Button(this, options)));\n      }\n\n      if (option == 'toggle') {\n        wgt.toggle();\n      } else if (option) {\n        wgt.setState(option);\n      }\n    });\n  }\n\n  var old = $.fn.button;\n\n  $.fn.button             = Plugin;\n  $.fn.button.Constructor = Button;\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old;\n    return this;\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n  /*  \n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target).closest('.btn')\n      Plugin.call($btn, 'toggle')\n      if (!($(e.target).is('input[type=\"radio\"], input[type=\"checkbox\"]'))) {\n        // Prevent double click on radios, and the double selections (so cancellation) on checkboxes\n        e.preventDefault()\n        // The target component still receive the focus\n        if ($btn.is('input,button')) $btn.trigger('focus')\n        else $btn.find('input:visible,button:visible').first().trigger('focus')\n      }\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n  */\n\n  return $.fn.button;\n});\n"]}