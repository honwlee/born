{"version":3,"sources":["spinbox.js"],"names":["define","langx","browser","eventer","noder","geom","velm","$","sbswt","old","fn","spinbox","Spinbox","WidgetBase","inherit","klassName","init","element","options","this","$element","find","on","e","preventDefault","mixin","defaults","step","data","value","min","max","$input","proxy","change","keydown","keyup","hold","startSpin","stopSpin","switches","count","enabled","speed","defaultUnit","_isUnitLegal","units","unit","lastValue","render","disabled","disable","destroy","remove","each","attr","val","outerHTML","_setValue","getDisplayValue","triggerChangedEvent","undefined","timeout","clearTimeout","currentValue","getValue","trigger","type","divisor","setTimeout","iterate","isIncrease","newVal","toFixed","inputValue","parseInput","setDisplayValue","decimalMark","split","join","setValue","shouldSetLastValue","potentialUnit","replace","intVal","getIntValue","isNaN","isFinite","_applyLimits","call","parseFloat","addClass","enable","removeClass","removeAttr","event","keyCode","_limitToStep","number","Math","round","validUnits","legalUnit","suspectUnit","toLowerCase","i","validUnit","cycle","limitToStep","option","methodReturn","args","Array","prototype","slice","arguments","$set","$this","apply","Constructor","noConflict"],"mappings":"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","file":"../spinbox.js","sourcesContent":["define([\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"./sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,sbswt){\n\n\n\t/*\n\t * Fuel UX Checkbox\n\t * https://github.com/ExactTarget/fuelux\n\t *\n\t * Copyright (c) 2014 ExactTarget\n\t * Licensed under the BSD New license.\n\t */\n\n\tvar old = $.fn.spinbox;\n\n\t// SPINBOX CONSTRUCTOR AND PROTOTYPE\n\n\tvar Spinbox = sbswt.Spinbox = sbswt.WidgetBase.inherit({\n\t\tklassName: \"Spinbox\",\n\n\t\tinit : function(element,options) {\n\t\t\tthis.$element = $(element);\n\t\t\tthis.$element.find('.btn').on('click', function (e) {\n\t\t\t\t//keep spinbox from submitting if they forgot to say type=\"button\" on their spinner buttons\n\t\t\t\te.preventDefault();\n\t\t\t});\n\t\t\tthis.options = langx.mixin({}, $.fn.spinbox.defaults, options);\n\t\t\tthis.options.step = this.$element.data('step') || this.options.step;\n\n\t\t\tif (this.options.value < this.options.min) {\n\t\t\t\tthis.options.value = this.options.min;\n\t\t\t} else if (this.options.max < this.options.value) {\n\t\t\t\tthis.options.value = this.options.max;\n\t\t\t}\n\n\t\t\tthis.$input = this.$element.find('.spinbox-input');\n\t\t\tthis.$input.on('focusout.fu.spinbox', this.$input, langx.proxy(this.change, this));\n\t\t\tthis.$element.on('keydown.fu.spinbox', this.$input, langx.proxy(this.keydown, this));\n\t\t\tthis.$element.on('keyup.fu.spinbox', this.$input, langx.proxy(this.keyup, this));\n\n\t\t\tif (this.options.hold) {\n\t\t\t\tthis.$element.on('mousedown.fu.spinbox', '.spinbox-up', langx.proxy(function () {\n\t\t\t\t\tthis.startSpin(true);\n\t\t\t\t}, this));\n\t\t\t\tthis.$element.on('mouseup.fu.spinbox', '.spinbox-up, .spinbox-down', langx.proxy(this.stopSpin, this));\n\t\t\t\tthis.$element.on('mouseout.fu.spinbox', '.spinbox-up, .spinbox-down', langx.proxy(this.stopSpin, this));\n\t\t\t\tthis.$element.on('mousedown.fu.spinbox', '.spinbox-down', langx.proxy(function () {\n\t\t\t\t\tthis.startSpin(false);\n\t\t\t\t}, this));\n\t\t\t} else {\n\t\t\t\tthis.$element.on('click.fu.spinbox', '.spinbox-up', langx.proxy(function () {\n\t\t\t\t\tthis.step(true);\n\t\t\t\t}, this));\n\t\t\t\tthis.$element.on('click.fu.spinbox', '.spinbox-down', langx.proxy(function () {\n\t\t\t\t\tthis.step(false);\n\t\t\t\t}, this));\n\t\t\t}\n\n\t\t\tthis.switches = {\n\t\t\t\tcount: 1,\n\t\t\t\tenabled: true\n\t\t\t};\n\n\t\t\tif (this.options.speed === 'medium') {\n\t\t\t\tthis.switches.speed = 300;\n\t\t\t} else if (this.options.speed === 'fast') {\n\t\t\t\tthis.switches.speed = 100;\n\t\t\t} else {\n\t\t\t\tthis.switches.speed = 500;\n\t\t\t}\n\n\t\t\tthis.options.defaultUnit = _isUnitLegal(this.options.defaultUnit, this.options.units) ? this.options.defaultUnit : '';\n\t\t\tthis.unit = this.options.defaultUnit;\n\n\t\t\tthis.lastValue = this.options.value;\n\n\t\t\tthis.render();\n\n\t\t\tif (this.options.disabled) {\n\t\t\t\tthis.disable();\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function destroy() {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// set input value attrbute\n\t\t\tthis.$element.find('input').each(function () {\n\t\t\t\t$(this).attr('value', $(this).val());\n\t\t\t});\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\trender: function render() {\n\t\t\tthis._setValue(this.getDisplayValue());\n\t\t},\n\n\t\tchange: function change() {\n\t\t\tthis._setValue(this.getDisplayValue());\n\n\t\t\tthis.triggerChangedEvent();\n\t\t},\n\n\t\tstopSpin: function stopSpin() {\n\t\t\tif (this.switches.timeout !== undefined) {\n\t\t\t\tclearTimeout(this.switches.timeout);\n\t\t\t\tthis.switches.count = 1;\n\t\t\t\tthis.triggerChangedEvent();\n\t\t\t}\n\t\t},\n\n\t\ttriggerChangedEvent: function triggerChangedEvent() {\n\t\t\tvar currentValue = this.getValue();\n\t\t\tif (currentValue === this.lastValue) return;\n\t\t\tthis.lastValue = currentValue;\n\n\t\t\t// Primary changed event\n\t\t\tthis.$element.trigger('changed.fu.spinbox', currentValue);\n\t\t},\n\n\t\tstartSpin: function startSpin(type) {\n\t\t\tif (!this.options.disabled) {\n\t\t\t\tvar divisor = this.switches.count;\n\n\t\t\t\tif (divisor === 1) {\n\t\t\t\t\tthis.step(type);\n\t\t\t\t\tdivisor = 1;\n\t\t\t\t} else if (divisor < 3) {\n\t\t\t\t\tdivisor = 1.5;\n\t\t\t\t} else if (divisor < 8) {\n\t\t\t\t\tdivisor = 2.5;\n\t\t\t\t} else {\n\t\t\t\t\tdivisor = 4;\n\t\t\t\t}\n\n\t\t\t\tthis.switches.timeout = setTimeout(langx.proxy(function () {\n\t\t\t\t\tthis.iterate(type);\n\t\t\t\t}, this), this.switches.speed / divisor);\n\t\t\t\tthis.switches.count++;\n\t\t\t}\n\t\t},\n\n\t\titerate: function iterate(type) {\n\t\t\tthis.step(type);\n\t\t\tthis.startSpin(type);\n\t\t},\n\n\t\tstep: function step(isIncrease) {\n\t\t\t//refresh value from display before trying to increment in case they have just been typing before clicking the nubbins\n\t\t\tthis._setValue(this.getDisplayValue());\n\t\t\tvar newVal;\n\n\t\t\tif (isIncrease) {\n\t\t\t\tnewVal = this.options.value + this.options.step;\n\t\t\t} else {\n\t\t\t\tnewVal = this.options.value - this.options.step;\n\t\t\t}\n\n\t\t\tnewVal = newVal.toFixed(5);\n\n\t\t\tthis._setValue(newVal + this.unit);\n\t\t},\n\n\t\tgetDisplayValue: function getDisplayValue() {\n\t\t\tvar inputValue = this.parseInput(this.$input.val());\n\t\t\tvar value = (!!inputValue) ? inputValue : this.options.value;\n\t\t\treturn value;\n\t\t},\n\n\t\tsetDisplayValue: function setDisplayValue(value) {\n\t\t\tthis.$input.val(value);\n\t\t},\n\n\t\tgetValue: function getValue() {\n\t\t\tvar val = this.options.value;\n\t\t\tif (this.options.decimalMark !== '.'){\n\t\t\t\tval = (val + '').split('.').join(this.options.decimalMark);\n\t\t\t}\n\t\t\treturn val + this.unit;\n\t\t},\n\n\t\tsetValue: function setValue(val) {\n\t\t\treturn this._setValue(val, true);\n\t\t},\n\n\t\t_setValue: function _setValue(val, shouldSetLastValue) {\n\t\t\t//remove any i18n on the number\n\t\t\tif (this.options.decimalMark !== '.') {\n\t\t\t\tval = this.parseInput(val);\n\t\t\t}\n\n\t\t\t//are we dealing with united numbers?\n\t\t\tif(typeof val !== \"number\"){\n\t\t\t\tvar potentialUnit = val.replace(/[0-9.-]/g, '');\n\t\t\t\t//make sure unit is valid, or else drop it in favor of current unit, or default unit (potentially nothing)\n\t\t\t\tthis.unit = _isUnitLegal(potentialUnit, this.options.units) ? potentialUnit : this.options.defaultUnit;\n\t\t\t}\n\n\t\t\tvar intVal = this.getIntValue(val);\n\n\t\t\t//make sure we are dealing with a number\n\t\t\tif (isNaN(intVal) && !isFinite(intVal)) {\n\t\t\t\treturn this._setValue(this.options.value, shouldSetLastValue);\n\t\t\t}\n\n\t\t\t//conform\n\t\t\tintVal = _applyLimits.call(this, intVal);\n\n\t\t\t//cache the pure int value\n\t\t\tthis.options.value = intVal;\n\n\t\t\t//prepare number for display\n\t\t\tval = intVal + this.unit;\n\n\t\t\tif (this.options.decimalMark !== '.'){\n\t\t\t\tval = (val + '').split('.').join(this.options.decimalMark);\n\t\t\t}\n\n\t\t\t//display number\n\t\t\tthis.setDisplayValue(val);\n\n\t\t\tif (shouldSetLastValue) {\n\t\t\t\tthis.lastValue = val;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\tvalue: function value(val) {\n\t\t\tif (val || val === 0) {\n\t\t\t\treturn this.setValue(val);\n\t\t\t} else {\n\t\t\t\treturn this.getValue();\n\t\t\t}\n\t\t},\n\n\t\tparseInput: function parseInput(value) {\n\t\t\tvalue = (value + '').split(this.options.decimalMark).join('.');\n\n\t\t\treturn value;\n\t\t},\n\n\t\tgetIntValue: function getIntValue(value) {\n\t\t\t//if they didn't pass in a number, try and get the number\n\t\t\tvalue = (typeof value === \"undefined\") ? this.getValue() : value;\n\t\t\t// if there still isn't a number, abort\n\t\t\tif(typeof value === \"undefined\"){return;}\n\n\t\t\tif (typeof value === 'string'){\n\t\t\t\tvalue = this.parseInput(value);\n\t\t\t}\n\n\t\t\tvalue = parseFloat(value, 10);\n\n\t\t\treturn value;\n\t\t},\n\n\t\tdisable: function disable() {\n\t\t\tthis.options.disabled = true;\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$input.attr('disabled', '');\n\t\t\tthis.$element.find('button').addClass('disabled');\n\t\t},\n\n\t\tenable: function enable() {\n\t\t\tthis.options.disabled = false;\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$input.removeAttr('disabled');\n\t\t\tthis.$element.find('button').removeClass('disabled');\n\t\t},\n\n\t\tkeydown: function keydown(event) {\n\t\t\tvar keyCode = event.keyCode;\n\t\t\tif (keyCode === 38) {\n\t\t\t\tthis.step(true);\n\t\t\t} else if (keyCode === 40) {\n\t\t\t\tthis.step(false);\n\t\t\t} else if (keyCode === 13) {\n\t\t\t\tthis.change();\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function keyup(event) {\n\t\t\tvar keyCode = event.keyCode;\n\n\t\t\tif (keyCode === 38 || keyCode === 40) {\n\t\t\t\tthis.triggerChangedEvent();\n\t\t\t}\n\t\t}\n\n\t});\t\n\n\t// Truly private methods\n\tvar _limitToStep = function _limitToStep(number, step) {\n\t\treturn Math.round(number / step) * step;\n\t};\n\n\tvar _isUnitLegal = function _isUnitLegal(unit, validUnits) {\n\t\tvar legalUnit = false;\n\t\tvar suspectUnit = unit.toLowerCase();\n\n\t\tlangx.each(validUnits, function (i, validUnit) {\n\t\t\tvalidUnit = validUnit.toLowerCase();\n\t\t\tif (suspectUnit === validUnit) {\n\t\t\t\tlegalUnit = true;\n\t\t\t\treturn false;//break out of the loop\n\t\t\t}\n\t\t});\n\n\t\treturn legalUnit;\n\t};\n\n\tvar _applyLimits = function _applyLimits(value) {\n\t\t// if unreadable\n\t\tif (isNaN(parseFloat(value))) {\n\t\t\treturn value;\n\t\t}\n\n\t\t// if not within range return the limit\n\t\tif (value > this.options.max) {\n\t\t\tif (this.options.cycle) {\n\t\t\t\tvalue = this.options.min;\n\t\t\t} else {\n\t\t\t\tvalue = this.options.max;\n\t\t\t}\n\t\t} else if (value < this.options.min) {\n\t\t\tif (this.options.cycle) {\n\t\t\t\tvalue = this.options.max;\n\t\t\t} else {\n\t\t\t\tvalue = this.options.min;\n\t\t\t}\n\t\t}\n\n\t\tif (this.options.limitToStep && this.options.step) {\n\t\t\tvalue = _limitToStep(value, this.options.step);\n\n\t\t\t//force round direction so that it stays within bounds\n\t\t\tif(value > this.options.max){\n\t\t\t\tvalue = value - this.options.step;\n\t\t\t} else if(value < this.options.min) {\n\t\t\t\tvalue = value + this.options.step;\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t};\n\n\t// SPINBOX PLUGIN DEFINITION\n\n\t$.fn.spinbox = function spinbox(option) {\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\t\tvar methodReturn;\n\n\t\tvar $set = this.each(function () {\n\t\t\tvar $this = $(this);\n\t\t\tvar data = $this.data('fu.spinbox');\n\t\t\tvar options = typeof option === 'object' && option;\n\n\t\t\tif (!data) {\n\t\t\t\t$this.data('fu.spinbox', (data = new Spinbox(this, options)));\n\t\t\t}\n\n\t\t\tif (typeof option === 'string') {\n\t\t\t\tmethodReturn = data[option].apply(data, args);\n\t\t\t}\n\t\t});\n\n\t\treturn (methodReturn === undefined) ? $set : methodReturn;\n\t};\n\n\t// value needs to be 0 for this.render();\n\t$.fn.spinbox.defaults = {\n\t\tvalue: 0,\n\t\tmin: 0,\n\t\tmax: 999,\n\t\tstep: 1,\n\t\thold: true,\n\t\tspeed: 'medium',\n\t\tdisabled: false,\n\t\tcycle: false,\n\t\tunits: [],\n\t\tdecimalMark: '.',\n\t\tdefaultUnit: '',\n\t\tlimitToStep: false\n\t};\n\n\t$.fn.spinbox.Constructor = Spinbox;\n\n\t$.fn.spinbox.noConflict = function noConflict() {\n\t\t$.fn.spinbox = old;\n\t\treturn this;\n\t};\n\n\n\t// DATA-API\n\n\t/*\n\t$(document).on('mousedown.fu.spinbox.data-api', '[data-initialize=spinbox]', function (e) {\n\t\tvar $control = $(e.target).closest('.spinbox');\n\t\tif (!$control.data('fu.spinbox')) {\n\t\t\t$control.spinbox($control.data());\n\t\t}\n\t});\n\n\t// Must be domReady for AMD compatibility\n\t$(function () {\n\t\t$('[data-initialize=spinbox]').each(function () {\n\t\t\tvar $this = $(this);\n\t\t\tif (!$this.data('fu.spinbox')) {\n\t\t\t\t$this.spinbox($this.data());\n\t\t\t}\n\t\t});\n\t});\n\t*/\n\n\treturn $.fn.spinbox;\n});\n"]}