{"version":3,"sources":["toolbar.js"],"names":["define","langx","browser","eventer","noder","geom","velm","$","sbswt","Toolbar","WidgetBase","inherit","klassName","init","elm","options","this","_options","mixin","autoredraw","buttons","context","list","show","$container","$el","append","on","e","dropdown","render","createToolbarItems","items","container","each","i","item","type","createButtonGroup","createButton","createDrop","createInput","group","class","role","button","attrs","icon","text","attr","dropdown_group","dropdown_button","dropdown_list","addClass","dropdown_option","dropdown_option_li","input_group","input_element","input_prefix","html","prefix","input_sufix","sufix","inputType","fn","toolbar"],"mappings":"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","file":"../toolbar.js","sourcesContent":["define([\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"./sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,sbswt){\n\n\tvar Toolbar = sbswt.Toolbar = sbswt.WidgetBase.inherit({\n        klassName: \"Toolbar\",\n\n        init : function(elm,options) {\n\t\t\tvar self = this;\n\t\t\tthis._options = langx.mixin({\n\t\t\t\t\tautoredraw: true,\n\t\t\t\t\tbuttons: {},\n\t\t\t\t\tcontext: {},\n\t\t\t\t\tlist: [],\n\t\t\t\t\tshow: true,\n\t\t\t},options);\n\n\n\t\t\tthis.$container = $('<nav class=\"navbar\"/>');\n\t\t\tthis.$el = $(elm).append(this.$container);\n\n\t\t\tthis.$container.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\n\t\t\t\t$(this).dropdown();\n\t\t\t}); \n\n\t\t\tthis.render();\n        },\n\n\n\t\trender : function () {\n\t\t\tfunction createToolbarItems(items,container) {\n\t\t\t\tlangx.each(items,function(i,item)  {\n\t\t\t\t\tvar type = item.type;\n\t\t\t\t\tif (!type) {\n\t\t\t\t\t\ttype = \"button\";\n\t\t\t\t\t}\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase \"buttongroup\":\n\t\t\t\t\t\t\t// Create an element with the HTML\n\t\t\t\t\t\t\tcreateButtonGroup(item,container);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"button\":\n\t\t\t\t\t\t\tcreateButton(item,container)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"dropdown\":\n\t\t\t\t\t\tcase \"dropup\":\n\t\t\t\t\t\t\tcreateDrop(item,container)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"input\":\n\t\t\t\t\t\t\tcreateInput(item,container)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow \"Wrong widget button type\";\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\tfunction createButtonGroup(item,container) {\n\t\t\t\tvar  group = $(\"<div/>\", { class: \"btn-group\", role: \"group\" });\n\t\t\t\tcontainer.append(group);\n\t\t\t\tcreateToolbarItems(item.items,group);\n\t\t\t\treturn group;\n\t\t\t}\n\n\t\t\tfunction createButton(item,container) {\n\t\t\t\t// Create button\n\t\t\t\tvar button = $('<button type=\"button\" class=\"btn btn-default\"/>'),\n\t\t\t\t\tattrs = langx.mixin({},item);\n\n\t\t\t\t// If has icon\n\t\t\t\tif (\"icon\" in item) {\n\t\t\t\t\tbutton.append($(\"<span/>\", { class: item.icon }));\n\t\t\t\t\tdelete attrs.icon;\n\t\t\t\t}\n\t\t\t\t// If has text\n\t\t\t\tif (\"text\" in attrs) {\n\t\t\t\t\tbutton.append(\" \" + item.text);\n\t\t\t\t\tdelete attrs.text;\n\t\t\t\t}\n\n\t\t\t\tbutton.attr(attrs);\n\n\t\t\t\t// Add button to the group\n\t\t\t\tcontainer.append(button);\n\n\t\t\t}\n\n\t\t\tfunction createDrop(item,container) {\n\t\t\t\t// Create button\n\t\t\t\tvar dropdown_group = $('<div class=\"btn-group\" role=\"group\"/>');\n\t\t\t\tvar dropdown_button = $('<button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"/>');\n\t\t\t\tvar dropdown_list = $('<ul class=\"dropdown-menu\"/>');\n\n\t\t\t\tvar\tattrs = langx.mixin({},item);\n\n\t\t\t\tif(item.type === \"dropup\") {\n\t\t\t\t\tdropdown_group.addClass(\"dropup\");\n\t\t\t\t}\n\n\t\t\t\t// If has icon\n\t\t\t\tif (\"icon\" in item) {\n\t\t\t\t\tdropdown_button.append($(\"<span/>\", { class: item.icon }));\n\t\t\t\t\tdelete attrs.icon;\n\t\t\t\t}\n\t\t\t\t// If has text\n\t\t\t\tif (\"text\" in item) {\n\t\t\t\t\tdropdown_button.append(\" \" + item.text);\n\t\t\t\t\tdelete attrs.text;\n\t\t\t\t}\n\t\t\t\t// Add caret\n\t\t\t\tdropdown_button.append(' <span class=\"caret\"/>');\n\n\t\t\t\t// Add list of options\n\t\t\t\tfor(var i in item.list) {\n\t\t\t\t\tvar dropdown_option = item.list[i];\n\t\t\t\t\tvar dropdown_option_li = $('<li/>');\n\n\t\t\t\t\t// If has icon\n\t\t\t\t\tif (\"icon\" in dropdown_option) {\n\t\t\t\t\t\tdropdown_option_li.append($(\"<span/>\", { class: dropdown_option.icon }));\n\t\t\t\t\t}\n\n\t\t\t\t\t// If has text\n\t\t\t\t\tif (\"text\" in dropdown_option) {\n\t\t\t\t\t\tdropdown_option_li.append(\" \" + dropdown_option.text);\n\t\t\t\t\t}\n\t\t\t\t\t// Set attributes\n\t\t\t\t\tdropdown_option_li.attr(dropdown_option);\n\n\t\t\t\t\t// Add to dropdown list\n\t\t\t\t\tdropdown_list.append(dropdown_option_li);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Set attributes\n\t\t\t\tdropdown_group.attr(attrs);\n\n\t\t\t\tdropdown_group.append(dropdown_button);\n\t\t\t\tdropdown_group.append(dropdown_list);\n\t\t\t\tcontainer.append(dropdown_group);\n\n\t\t\t}\n\n\t\t\tfunction createInput(item,container) {\n\t\t\t\tvar input_group = $('<div class=\"input-group\"/>');\n\t\t\t\tvar input_element = $('<input class=\"form-control\"/>');\n\t\t\t\t\n\t\t\t\tvar\tattrs = langx.mixin({},item);\n\n\t\t\t\t// Add prefix addon\n\t\t\t\tif(\"prefix\" in item) {\n\t\t\t\t\tvar input_prefix = $('<span class=\"input-group-addon\"/>');\n\t\t\t\t\tinput_prefix.html(item.prefix);\n\t\t\t\t\tinput_group.append(input_prefix);\n\n\t\t\t\t\tdelete attrs.prefix;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Add input\n\t\t\t\tinput_group.append(input_element);\n\n\t\t\t\t// Add sufix addon\n\t\t\t\tif(\"sufix\" in item) {\n\t\t\t\t\tvar input_sufix = $('<span class=\"input-group-addon\"/>');\n\t\t\t\t\tinput_sufix.html(item.sufix);\n\t\t\t\t\tinput_group.append(input_sufix);\n\n\t\t\t\t\tdelete attrs.sufix;\n\t\t\t\t}\n\n\t\t\t\tattrs.type = attrs.inputType;\n\n\t\t\t\tdelete attrs.inputType;\n\n\t\t\t\t// Set attributes\n\t\t\t\tinput_element.attr(attrs);\n\n\t\t\t\tcontainer.append(input_group);\n\n\t\t\t}\n\n\t\t\tvar items = this._options.items;\n\t\t\tif (items) {\n\t\t\t\tcreateToolbarItems(items,this.$container);\n\t\t\t}\n\t\t}\n\n\t});\n\n\n\t$.fn.toolbar = function (options) {\n\t\toptions = options || {};\n\n\t\treturn this.each(function () {\n\t\t\treturn new Toolbar(this, langx.mixin({}, options,true));\n\t\t});\n\t};\n\n\treturn Toolbar;\n\n});\n"]}