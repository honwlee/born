{"version":3,"sources":["repeater-thumbnail.js"],"names":["define","langx","browser","eventer","noder","geom","$","fillTemplate","itemData","template","replace","end","start","val","indexOf","trim","substring","undefined","invalid","search","fn","repeater","Constructor","prototype","thumbnail_clearSelectedItems","this","$canvas","find","removeClass","thumbnail_getSelectedItems","selected","each","push","thumbnail_setSelectedItems","items","force","compareItemIndex","n","i","index","$item","compareItemSelector","is","selector","selectItem","$itm","select","selectable","self","addClass","l","viewOptions","thumbnail_selectable","isArray","length","defaults","mixin","thumbnail_alignment","thumbnail_infiniteScroll","thumbnail_itemRendered","thumbnail_noItemsHTML","thumbnail_template","viewTypes","thumbnail","opts","infScroll","infiniteScrolling","before","helpers","$empty","validAlignments","alignment","$cont","data","response","center","justify","left","right","thumbnail_injectSpacers","item","action","append","remove","renderItem","$thumbnail","subset","on","isDisabled","hasClass","$element","trigger","container","after"],"mappings":"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","file":"../repeater-thumbnail.js","sourcesContent":["define([\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/query\",\n  \"./repeater\"  \n],function(langx,browser,eventer,noder,geom,$){\n\n\t/*\n\t * Fuel UX Checkbox\n\t * https://github.com/ExactTarget/fuelux\n\t *\n\t * Copyright (c) 2014 ExactTarget\n\t * Licensed under the BSD New license.\n\t */\n\n\tif ($.fn.repeater) {\n\t\t//ADDITIONAL METHODS\n\t\t$.fn.repeater.Constructor.prototype.thumbnail_clearSelectedItems = function () {\n\t\t\tthis.$canvas.find('.repeater-thumbnail-cont .selectable.selected').removeClass('selected');\n\t\t};\n\n\t\t$.fn.repeater.Constructor.prototype.thumbnail_getSelectedItems = function () {\n\t\t\tvar selected = [];\n\t\t\tthis.$canvas.find('.repeater-thumbnail-cont .selectable.selected').each(function () {\n\t\t\t\tselected.push($(this));\n\t\t\t});\n\t\t\treturn selected;\n\t\t};\n\n\t\t$.fn.repeater.Constructor.prototype.thumbnail_setSelectedItems = function (items, force) {\n\t\t\tvar selectable = this.viewOptions.thumbnail_selectable;\n\t\t\tvar self = this;\n\t\t\tvar i, $item, l, n;\n\n\t\t\t//this function is necessary because lint yells when a function is in a loop\n\t\t\tfunction compareItemIndex () {\n\t\t\t\tif (n === items[i].index) {\n\t\t\t\t\t$item = $(this);\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\tn++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//this function is necessary because lint yells when a function is in a loop\n\t\t\tfunction compareItemSelector () {\n\t\t\t\t$item = $(this);\n\t\t\t\tif ($item.is(items[i].selector)) {\n\t\t\t\t\tselectItem($item, items[i].selected);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction selectItem ($itm, select) {\n\t\t\t\tselect = (select !== undefined) ? select : true;\n\t\t\t\tif (select) {\n\t\t\t\t\tif (!force && selectable !== 'multi') {\n\t\t\t\t\t\tself.thumbnail_clearSelectedItems();\n\t\t\t\t\t}\n\n\t\t\t\t\t$itm.addClass('selected');\n\t\t\t\t} else {\n\t\t\t\t\t$itm.removeClass('selected');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$.isArray(items)) {\n\t\t\t\titems = [items];\n\t\t\t}\n\n\t\t\tif (force === true || selectable === 'multi') {\n\t\t\t\tl = items.length;\n\t\t\t} else if (selectable) {\n\t\t\t\tl = (items.length > 0) ? 1 : 0;\n\t\t\t} else {\n\t\t\t\tl = 0;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tif (items[i].index !== undefined) {\n\t\t\t\t\t$item = $();\n\t\t\t\t\tn = 0;\n\t\t\t\t\tthis.$canvas.find('.repeater-thumbnail-cont .selectable').each(compareItemIndex);\n\t\t\t\t\tif ($item.length > 0) {\n\t\t\t\t\t\tselectItem($item, items[i].selected);\n\t\t\t\t\t}\n\n\t\t\t\t} else if (items[i].selector) {\n\t\t\t\t\tthis.$canvas.find('.repeater-thumbnail-cont .selectable').each(compareItemSelector);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t//ADDITIONAL DEFAULT OPTIONS\n\t\t$.fn.repeater.defaults = langx.mixin({}, $.fn.repeater.defaults, {\n\t\t\tthumbnail_alignment: 'left',\n\t\t\tthumbnail_infiniteScroll: false,\n\t\t\tthumbnail_itemRendered: null,\n\t\t\tthumbnail_noItemsHTML: 'no items found',\n\t\t\tthumbnail_selectable: false,\n\t\t\tthumbnail_template: '<div class=\"thumbnail repeater-thumbnail\"><img height=\"75\" src=\"{{src}}\" width=\"65\"><span>{{name}}</span></div>'\n\t\t});\n\n\t\t//EXTENSION DEFINITION\n\t\t$.fn.repeater.viewTypes.thumbnail = {\n\t\t\tselected: function () {\n\t\t\t\tvar infScroll = this.viewOptions.thumbnail_infiniteScroll;\n\t\t\t\tvar opts;\n\t\t\t\tif (infScroll) {\n\t\t\t\t\topts = (typeof infScroll === 'object') ? infScroll : {};\n\t\t\t\t\tthis.infiniteScrolling(true, opts);\n\t\t\t\t}\n\t\t\t},\n\t\t\tbefore: function (helpers) {\n\t\t\t\tvar alignment = this.viewOptions.thumbnail_alignment;\n\t\t\t\tvar $cont = this.$canvas.find('.repeater-thumbnail-cont');\n\t\t\t\tvar data = helpers.data;\n\t\t\t\tvar response = {};\n\t\t\t\tvar $empty, validAlignments;\n\n\t\t\t\tif ($cont.length < 1) {\n\t\t\t\t\t$cont = $('<div class=\"clearfix repeater-thumbnail-cont\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></div>');\n\t\t\t\t\tif (alignment && alignment !== 'none') {\n\t\t\t\t\t\tvalidAlignments = {\n\t\t\t\t\t\t\t'center': 1,\n\t\t\t\t\t\t\t'justify': 1,\n\t\t\t\t\t\t\t'left': 1,\n\t\t\t\t\t\t\t'right': 1\n\t\t\t\t\t\t};\n\t\t\t\t\t\talignment = (validAlignments[alignment]) ? alignment : 'justify';\n\t\t\t\t\t\t$cont.addClass('align-' + alignment);\n\t\t\t\t\t\tthis.thumbnail_injectSpacers = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.thumbnail_injectSpacers = false;\n\t\t\t\t\t}\n\t\t\t\t\tresponse.item = $cont;\n\t\t\t\t} else {\n\t\t\t\t\tresponse.action = 'none';\n\t\t\t\t}\n\n\t\t\t\tif (data.items && data.items.length < 1) {\n\t\t\t\t\t$empty = $('<div class=\"empty\"></div>');\n\t\t\t\t\t$empty.append(this.viewOptions.thumbnail_noItemsHTML);\n\t\t\t\t\t$cont.append($empty);\n\t\t\t\t} else {\n\t\t\t\t\t$cont.find('.empty:first').remove();\n\t\t\t\t}\n\n\t\t\t\treturn response;\n\t\t\t},\n\t\t\trenderItem: function (helpers) {\n\t\t\t\tvar selectable = this.viewOptions.thumbnail_selectable;\n\t\t\t\tvar selected = 'selected';\n\t\t\t\tvar self = this;\n\t\t\t\tvar $thumbnail = $(fillTemplate(helpers.subset[helpers.index], this.viewOptions.thumbnail_template));\n\n\t\t\t\t$thumbnail.data('item_data', helpers.data.items[helpers.index]);\n\n\t\t\t\tif (selectable) {\n\t\t\t\t\t$thumbnail.addClass('selectable');\n\t\t\t\t\t$thumbnail.on('click', function () {\n\t\t\t\t\t\tif (self.isDisabled) return;\n\n\t\t\t\t\t\tif (!$thumbnail.hasClass(selected)) {\n\t\t\t\t\t\t\tif (selectable !== 'multi') {\n\t\t\t\t\t\t\t\tself.$canvas.find('.repeater-thumbnail-cont .selectable.selected').each(function () {\n\t\t\t\t\t\t\t\t\tvar $itm = $(this);\n\t\t\t\t\t\t\t\t\t$itm.removeClass(selected);\n\t\t\t\t\t\t\t\t\tself.$element.trigger('deselected.fu.repeaterThumbnail', $itm);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$thumbnail.addClass(selected);\n\t\t\t\t\t\t\tself.$element.trigger('selected.fu.repeaterThumbnail', $thumbnail);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$thumbnail.removeClass(selected);\n\t\t\t\t\t\t\tself.$element.trigger('deselected.fu.repeaterThumbnail', $thumbnail);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\thelpers.container.append($thumbnail);\n\t\t\t\tif (this.thumbnail_injectSpacers) {\n\t\t\t\t\t$thumbnail.after('<span class=\"spacer\">&nbsp;</span>');\n\t\t\t\t}\n\n\t\t\t\tif (this.viewOptions.thumbnail_itemRendered) {\n\t\t\t\t\tthis.viewOptions.thumbnail_itemRendered({\n\t\t\t\t\t\tcontainer: helpers.container,\n\t\t\t\t\t\titem: $thumbnail,\n\t\t\t\t\t\titemData: helpers.subset[helpers.index]\n\t\t\t\t\t}, function () {});\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t}\n\n\t//ADDITIONAL METHODS\n\tfunction fillTemplate (itemData, template) {\n\t\tvar invalid = false;\n\n\t\tfunction replace () {\n\t\t\tvar end, start, val;\n\n\t\t\tstart = template.indexOf('{{');\n\t\t\tend = template.indexOf('}}', start + 2);\n\n\t\t\tif (start > -1 && end > -1) {\n\t\t\t\tval = langx.trim(template.substring(start + 2, end));\n\t\t\t\tval = (itemData[val] !== undefined) ? itemData[val] : '';\n\t\t\t\ttemplate = template.substring(0, start) + val + template.substring(end + 2);\n\t\t\t} else {\n\t\t\t\tinvalid = true;\n\t\t\t}\n\t\t}\n\n\t\twhile (!invalid && template.search('{{') >= 0) {\n\t\t\treplace(template);\n\t\t}\n\n\t\treturn template;\n\t}\n\n});\n"]}