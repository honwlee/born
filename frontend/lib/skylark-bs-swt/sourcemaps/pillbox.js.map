{"version":3,"sources":["pillbox.js"],"names":["define","langx","browser","eventer","noder","geom","velm","$","sbswt","old","fn","pillbox","CONST","COMMA_KEYCODE","ENTER_KEYCODE","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","cleanInput","isShiftHeld","Pillbox","WidgetBase","inherit","klassName","init","element","options","this","$element","$moreCount","find","$pillGroup","$addItem","$addItemWrap","parent","$suggest","$pillHTML","mixin","defaults","readonly","undefined","attr","acceptKeyCodes","_generateObject","on","proxy","itemClicked","inputFocus","inputEvent","onKeyDown","suggestionClick","edit","addClass","cancelEdit","destroy","remove","outerHTML","items","self","children","map","getItemData","get","e","$item","$target","target","preventDefault","stopPropagation","_closeSuggestions","hasClass","onRemove","el","_removeElement","length","openEdit","trigger","enable","removeAttr","truncate","currentTarget","item","text","html","value","data","val","JSON","parse","addItems","itemCount","index","isInternal","isFinite","String","arguments","Array","slice","call","each","i","currentEdit","wrap","pop","onAdd","saveEdit","placeItems","removeItems","howMany","itemsToRemove","$currentItem","_removePillTrigger","method","$neighbor","newItems","key","push","eq","before","last","after","prepend","isFocusOutEvent","type","blurredAfterInput","acceptKeyPressed","keyCode","_isSuggestionsOpen","$selection","replace","match","allowEmptyPills","hide","setTimeout","show","size","focus","$lastItem","width","removeClass","_keySuggestions","callbackId","timeStamp","event","_openSuggestions","targetChildIndex","detach","select","append","removeBySelector","selectors","sel","removedSelectors","removeByValue","values","removedValues","removeByText","matchingText","removedText","availableWidth","containerFull","processedPills","totalPills","widthUsed","pill","outerWidth","removedBy","obj","$suggestionList","$suggestion","stringify","document","$first","dir","$next","prev","next","prototype","getValue","option","methodReturn","args","$set","$this","apply","Constructor","noConflict"],"mappings":"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","file":"../pillbox.js","sourcesContent":["define([\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"./sbswt\",\n  \"./dropdown-autoflip\"\n],function(langx,browser,eventer,noder,geom,velm,$,sbswt){\n\n\t/*\n\t * Fuel UX Checkbox\n\t * https://github.com/ExactTarget/fuelux\n\t *\n\t * Copyright (c) 2014 ExactTarget\n\t * Licensed under the BSD New license.\n\t */\n\n\t// -- END UMD WRAPPER PREFACE --\n\n\t// -- BEGIN MODULE CODE HERE --\n\n\tvar old = $.fn.pillbox;\n\n\tvar CONST = sbswt.CONST;\n\tvar COMMA_KEYCODE = CONST.COMMA_KEYCODE;\n\tvar ENTER_KEYCODE = CONST.ENTER_KEYCODE;\n\tvar isBackspaceKey = sbswt.isBackspaceKey;\n\tvar isDeleteKey = sbswt.isDeleteKey;\n\tvar isTabKey = sbswt.isTabKey;\n\tvar isUpArrow = sbswt.isUpArrow;\n\tvar isDownArrow = sbswt.isDownArrow;\n\tvar cleanInput = sbswt.cleanInput;\n\tvar isShiftHeld = sbswt.isShiftHeld;\n\n\t// PILLBOX CONSTRUCTOR AND PROTOTYPE\n\n\tvar Pillbox = sbswt.Pillbox = sbswt.WidgetBase.inherit({\n\t\tklassName: \"Pillbox\",\n\n\t\tinit : function(element,options) {\n\t\t\tthis.$element = $(element);\n\t\t\tthis.$moreCount = this.$element.find('.pillbox-more-count');\n\t\t\tthis.$pillGroup = this.$element.find('.pill-group');\n\t\t\tthis.$addItem = this.$element.find('.pillbox-add-item');\n\t\t\tthis.$addItemWrap = this.$addItem.parent();\n\t\t\tthis.$suggest = this.$element.find('.suggest');\n\t\t\tthis.$pillHTML = '<li class=\"btn btn-default pill\">' +\n\t\t\t'\t<span></span>' +\n\t\t\t'\t<span class=\"glyphicon glyphicon-close\">' +\n\t\t\t'\t\t<span class=\"sr-only\">Remove</span>' +\n\t\t\t'\t</span>' +\n\t\t\t'</li>';\n\n\t\t\tthis.options = langx.mixin({}, $.fn.pillbox.defaults, options);\n\n\t\t\tif (this.options.readonly === -1) {\n\t\t\t\tif (this.$element.attr('data-readonly') !== undefined) {\n\t\t\t\t\tthis.readonly(true);\n\t\t\t\t}\n\t\t\t} else if (this.options.readonly) {\n\t\t\t\tthis.readonly(true);\n\t\t\t}\n\n\t\t\t// EVENTS\n\t\t\tthis.acceptKeyCodes = this._generateObject(this.options.acceptKeyCodes);\n\t\t\t// Create an object out of the key code array, so we don't have to loop through it on every key stroke\n\n\t\t\tthis.$element.on('click.fu.pillbox', '.pill-group > .pill', langx.proxy(this.itemClicked, this));\n\t\t\tthis.$element.on('click.fu.pillbox', langx.proxy(this.inputFocus, this));\n\t\t\tthis.$element.on('keydown.fu.pillbox', '.pillbox-add-item', langx.proxy(this.inputEvent, this));\n\t\t\tif (this.options.onKeyDown) {\n\t\t\t\tthis.$element.on('mousedown.fu.pillbox', '.suggest > li', langx.proxy(this.suggestionClick, this));\n\t\t\t}\n\n\t\t\tif (this.options.edit) {\n\t\t\t\tthis.$element.addClass('pills-editable');\n\t\t\t\tthis.$element.on('blur.fu.pillbox', '.pillbox-add-item', langx.proxy(this.cancelEdit, this));\n\t\t\t}\n\t\t\tthis.$element.on('blur.fu.pillbox', '.pillbox-add-item', langx.proxy(this.inputEvent, this));\n\t\t},\n\n\t\tdestroy: function destroy () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\titems: function items () {\n\t\t\tvar self = this;\n\n\t\t\treturn this.$pillGroup.children('.pill').map(function getItemsData () {\n\t\t\t\treturn self.getItemData($(this));\n\t\t\t}).get();\n\t\t},\n\n\t\titemClicked: function itemClicked (e) {\n\t\t\tvar $target = $(e.target);\n\t\t\tvar $item;\n\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tthis._closeSuggestions();\n\n\t\t\tif (!$target.hasClass('pill')) {\n\t\t\t\t$item = $target.parent();\n\t\t\t\tif (this.$element.attr('data-readonly') === undefined) {\n\t\t\t\t\tif ($target.hasClass('glyphicon-close')) {\n\t\t\t\t\t\tif (this.options.onRemove) {\n\t\t\t\t\t\t\tthis.options.onRemove(this.getItemData($item, {\n\t\t\t\t\t\t\t\tel: $item\n\t\t\t\t\t\t\t}), langx.proxy(this._removeElement, this));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._removeElement(this.getItemData($item, {\n\t\t\t\t\t\t\t\tel: $item\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (this.options.edit) {\n\t\t\t\t\t\tif ($item.find('.pillbox-list-edit').length) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.openEdit($item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$item = $target;\n\t\t\t}\n\n\t\t\tthis.$element.trigger('clicked.fu.pillbox', this.getItemData($item));\n\n\t\t\treturn true;\n\t\t},\n\n\t\treadonly: function readonly (enable) {\n\t\t\tif (enable) {\n\t\t\t\tthis.$element.attr('data-readonly', 'readonly');\n\t\t\t} else {\n\t\t\t\tthis.$element.removeAttr('data-readonly');\n\t\t\t}\n\n\t\t\tif (this.options.truncate) {\n\t\t\t\tthis.truncate(enable);\n\t\t\t}\n\t\t},\n\n\t\tsuggestionClick: function suggestionClick (e) {\n\t\t\tvar $item = $(e.currentTarget);\n\t\t\tvar item = {\n\t\t\t\ttext: $item.html(),\n\t\t\t\tvalue: $item.data('value')\n\t\t\t};\n\n\t\t\te.preventDefault();\n\t\t\tthis.$addItem.val('');\n\n\t\t\tif ($item.data('attr')) {\n\t\t\t\titem.attr = JSON.parse($item.data('attr'));\n\t\t\t}\n\n\t\t\titem.data = $item.data('data');\n\n\t\t\tthis.addItems(item, true);\n\n\t\t\t// needs to be after addItems for IE\n\t\t\tthis._closeSuggestions();\n\t\t},\n\n\t\titemCount: function itemCount () {\n\t\t\treturn this.$pillGroup.children('.pill').length;\n\t\t},\n\n\t\t// First parameter is 1 based index (optional, if index is not passed all new items will be appended)\n\t\t// Second parameter can be array of objects [{ ... }, { ... }] or you can pass n additional objects as args\n\t\t// object structure is as follows (attr and value are optional): { text: '', value: '', attr: {}, data: {} }\n\t\taddItems: function addItems () {\n\t\t\tvar self = this;\n\t\t\tvar items;\n\t\t\tvar index;\n\t\t\tvar isInternal;\n\n\t\t\tif (isFinite(String(arguments[0])) && !(arguments[0] instanceof Array)) {\n\t\t\t\titems = [].slice.call(arguments).slice(1);\n\t\t\t\tindex = arguments[0];\n\t\t\t} else {\n\t\t\t\titems = [].slice.call(arguments).slice(0);\n\t\t\t\tisInternal = items[1] && !items[1].text;\n\t\t\t}\n\n\t\t\t// If first argument is an array, use that, otherwise they probably passed each thing through as a separate arg, so use items as-is\n\t\t\tif (items[0] instanceof Array) {\n\t\t\t\titems = items[0];\n\t\t\t}\n\n\t\t\tif (items.length) {\n\t\t\t\tlangx.each(items, function normalizeItemsObject (i, value) {\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\ttext: value.text,\n\t\t\t\t\t\tvalue: (value.value ? value.value : value.text),\n\t\t\t\t\t\tel: self.$pillHTML\n\t\t\t\t\t};\n\n\t\t\t\t\tif (value.attr) {\n\t\t\t\t\t\tdata.attr = value.attr;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (value.data) {\n\t\t\t\t\t\tdata.data = value.data;\n\t\t\t\t\t}\n\n\t\t\t\t\titems[i] = data;\n\t\t\t\t});\n\n\t\t\t\tif (this.options.edit && this.currentEdit) {\n\t\t\t\t\titems[0].el = this.currentEdit.wrap('<div></div>').parent().html();\n\t\t\t\t}\n\n\t\t\t\tif (isInternal) {\n\t\t\t\t\titems.pop(1);\n\t\t\t\t}\n\n\t\t\t\tif (self.options.onAdd && isInternal) {\n\t\t\t\t\tif (this.options.edit && this.currentEdit) {\n\t\t\t\t\t\tself.options.onAdd(items[0], langx.proxy(self.saveEdit, this));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.options.onAdd(items[0], langx.proxy(self.placeItems, this));\n\t\t\t\t\t}\n\t\t\t\t} else if (this.options.edit && this.currentEdit) {\n\t\t\t\t\tself.saveEdit(items);\n\t\t\t\t} else if (index) {\n\t\t\t\t\tself.placeItems(index, items);\n\t\t\t\t} else {\n\t\t\t\t\tself.placeItems(items, isInternal);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// First parameter is the index (1 based) to start removing items\n\t\t// Second parameter is the number of items to be removed\n\t\tremoveItems: function removeItems (index, howMany) {\n\t\t\tvar self = this;\n\n\t\t\tif (!index) {\n\t\t\t\tthis.$pillGroup.find('.pill').remove();\n\t\t\t\tthis._removePillTrigger({\n\t\t\t\t\tmethod: 'removeAll'\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvar itemsToRemove = howMany ? howMany : 1;\n\n\t\t\t\tfor (var item = 0; item < itemsToRemove; item++) {\n\t\t\t\t\tvar $currentItem = self.$pillGroup.find('> .pill:nth-child(' + index + ')');\n\n\t\t\t\t\tif ($currentItem) {\n\t\t\t\t\t\t$currentItem.remove();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// First parameter is index (optional)\n\t\t// Second parameter is new arguments\n\t\tplaceItems: function placeItems () {\n\t\t\tvar items;\n\t\t\tvar index;\n\t\t\tvar $neighbor;\n\t\t\tvar isInternal;\n\n\t\t\tif (isFinite(String(arguments[0])) && !(arguments[0] instanceof Array)) {\n\t\t\t\titems = [].slice.call(arguments).slice(1);\n\t\t\t\tindex = arguments[0];\n\t\t\t} else {\n\t\t\t\titems = [].slice.call(arguments).slice(0);\n\t\t\t\tisInternal = items[1] && !items[1].text;\n\t\t\t}\n\n\t\t\tif (items[0] instanceof Array) {\n\t\t\t\titems = items[0];\n\t\t\t}\n\n\t\t\tif (items.length) {\n\t\t\t\tvar newItems = [];\n\t\t\t\tlangx.each(items, function prepareItemForAdd (i, item) {\n\t\t\t\t\tvar $item = $(item.el);\n\n\t\t\t\t\t$item.attr('data-value', item.value);\n\t\t\t\t\t$item.find('span:first').html(item.text);\n\n\t\t\t\t\t// DOM attributes\n\t\t\t\t\tif (item.attr) {\n\t\t\t\t\t\tlangx.each(item.attr, function handleDOMAttributes (key, value) {\n\t\t\t\t\t\t\tif (key === 'cssClass' || key === 'class') {\n\t\t\t\t\t\t\t\t$item.addClass(value);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$item.attr(key, value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (item.data) {\n\t\t\t\t\t\t$item.data('data', item.data);\n\t\t\t\t\t}\n\n\t\t\t\t\tnewItems.push($item);\n\t\t\t\t});\n\n\t\t\t\tif (this.$pillGroup.children('.pill').length > 0) {\n\t\t\t\t\tif (index) {\n\t\t\t\t\t\t$neighbor = this.$pillGroup.find('.pill').eq(index);\n\n\t\t\t\t\t\tif ($neighbor.length) {\n\t\t\t\t\t\t\t$neighbor.before(newItems);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.$pillGroup.children('.pill').last().after(newItems);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.$pillGroup.children('.pill').last().after(newItems);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.$pillGroup.prepend(newItems);\n\t\t\t\t}\n\n\t\t\t\tif (isInternal) {\n\t\t\t\t\tthis.$element.trigger('added.fu.pillbox', {\n\t\t\t\t\t\ttext: items[0].text,\n\t\t\t\t\t\tvalue: items[0].value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tinputEvent: function inputEvent (e) {\n\t\t\tvar self = this;\n\t\t\tvar text = self.options.cleanInput(this.$addItem.val());\n\t\t\tvar isFocusOutEvent = e.type === 'focusout';\n\t\t\tvar blurredAfterInput = (isFocusOutEvent && text.length > 0);\n\t\t\t// If we test for keycode only, it will match for `<` & `,` instead of just `,`\n\t\t\t// This way users can type `<3` and `1 < 3`, etc...\n\t\t\tvar acceptKeyPressed = (this.acceptKeyCodes[e.keyCode] && !isShiftHeld(e));\n\n\t\t\tif (acceptKeyPressed || blurredAfterInput) {\n\t\t\t\tvar attr;\n\t\t\t\tvar value;\n\n\t\t\t\tif (this.options.onKeyDown && this._isSuggestionsOpen()) {\n\t\t\t\t\tvar $selection = this.$suggest.find('.pillbox-suggest-sel');\n\n\t\t\t\t\tif ($selection.length) {\n\t\t\t\t\t\ttext = self.options.cleanInput($selection.html());\n\t\t\t\t\t\tvalue = self.options.cleanInput($selection.data('value'));\n\t\t\t\t\t\tattr = $selection.data('attr');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// ignore comma and make sure text that has been entered (protects against \" ,\". https://github.com/ExactTarget/fuelux/issues/593), unless allowEmptyPills is true.\n\t\t\t\tif (text.replace(/[ ]*\\,[ ]*/, '').match(/\\S/) || (this.options.allowEmptyPills && text.length)) {\n\t\t\t\t\tthis._closeSuggestions();\n\t\t\t\t\tthis.$addItem.val('').hide();\n\n\t\t\t\t\tif (attr) {\n\t\t\t\t\t\tthis.addItems({\n\t\t\t\t\t\t\ttext: text,\n\t\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\t\tattr: JSON.parse(attr)\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.addItems({\n\t\t\t\t\t\t\ttext: text,\n\t\t\t\t\t\t\tvalue: value\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t}\n\n\t\t\t\t\tsetTimeout(function clearAddItemInput () {\n\t\t\t\t\t\tself.$addItem.show().attr({\n\t\t\t\t\t\t\tsize: 10\n\t\t\t\t\t\t}).focus();\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\n\t\t\t\te.preventDefault();\n\t\t\t\treturn true;\n\t\t\t} else if (isBackspaceKey(e) || isDeleteKey(e)) {\n\t\t\t\tif (!text.length) {\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\tif (this.options.edit && this.currentEdit) {\n\t\t\t\t\t\tthis.cancelEdit();\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._closeSuggestions();\n\t\t\t\t\tvar $lastItem = this.$pillGroup.children('.pill:last');\n\n\t\t\t\t\tif ($lastItem.hasClass('pillbox-highlight')) {\n\t\t\t\t\t\tthis._removeElement(this.getItemData($lastItem, {\n\t\t\t\t\t\t\tel: $lastItem\n\t\t\t\t\t\t}));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$lastItem.addClass('pillbox-highlight');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else if (text.length > 10) {\n\t\t\t\tif (this.$addItem.width() < (this.$pillGroup.width() - 6)) {\n\t\t\t\t\tthis.$addItem.attr({\n\t\t\t\t\t\tsize: text.length + 3\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.$pillGroup.find('.pill').removeClass('pillbox-highlight');\n\n\t\t\tif (this.options.onKeyDown && !isFocusOutEvent) {\n\t\t\t\tif (\n\t\t\t\t\tisTabKey(e) ||\n\t\t\t\t\tisUpArrow(e) ||\n\t\t\t\t\tisDownArrow(e)\n\t\t\t\t) {\n\t\t\t\t\tif (this._isSuggestionsOpen()) {\n\t\t\t\t\t\tthis._keySuggestions(e);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// only allowing most recent event callback to register\n\t\t\t\tthis.callbackId = e.timeStamp;\n\t\t\t\tthis.options.onKeyDown({\n\t\t\t\t\tevent: e,\n\t\t\t\t\tvalue: text\n\t\t\t\t}, function callOpenSuggestions (data) {\n\t\t\t\t\tself._openSuggestions(e, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\topenEdit: function openEdit (el) {\n\t\t\tvar targetChildIndex = el.index() + 1;\n\t\t\tvar $addItemWrap = this.$addItemWrap.detach().hide();\n\n\t\t\tthis.$pillGroup.find('.pill:nth-child(' + targetChildIndex + ')').before($addItemWrap);\n\t\t\tthis.currentEdit = el.detach();\n\n\t\t\t$addItemWrap.addClass('editing');\n\t\t\tthis.$addItem.val(el.find('span:first').html());\n\t\t\t$addItemWrap.show();\n\t\t\tthis.$addItem.focus().select();\n\t\t},\n\n\t\tcancelEdit: function cancelEdit (e) {\n\t\t\tvar $addItemWrap;\n\t\t\tif (!this.currentEdit) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis._closeSuggestions();\n\t\t\tif (e) {\n\t\t\t\tthis.$addItemWrap.before(this.currentEdit);\n\t\t\t}\n\n\t\t\tthis.currentEdit = false;\n\n\t\t\t$addItemWrap = this.$addItemWrap.detach();\n\t\t\t$addItemWrap.removeClass('editing');\n\t\t\tthis.$addItem.val('');\n\t\t\tthis.$pillGroup.append($addItemWrap);\n\n\t\t\treturn true;\n\t\t},\n\n\t\t// Must match syntax of placeItem so addItem callback is called when an item is edited\n\t\t// expecting to receive an array back from the callback containing edited items\n\t\tsaveEdit: function saveEdit () {\n\t\t\tvar item = arguments[0][0] ? arguments[0][0] : arguments[0];\n\n\t\t\tthis.currentEdit = $(item.el);\n\t\t\tthis.currentEdit.data('value', item.value);\n\t\t\tthis.currentEdit.find('span:first').html(item.text);\n\n\t\t\tthis.$addItemWrap.hide();\n\t\t\tthis.$addItemWrap.before(this.currentEdit);\n\t\t\tthis.currentEdit = false;\n\n\t\t\tthis.$addItem.val('');\n\t\t\tthis.$addItemWrap.removeClass('editing');\n\t\t\tthis.$pillGroup.append(this.$addItemWrap.detach().show());\n\t\t\tthis.$element.trigger('edited.fu.pillbox', {\n\t\t\t\tvalue: item.value,\n\t\t\t\ttext: item.text\n\t\t\t});\n\t\t},\n\n\t\tremoveBySelector: function removeBySelector () {\n\t\t\tvar selectors = [].slice.call(arguments).slice(0);\n\t\t\tvar self = this;\n\n\t\t\tlangx.each(selectors, function doRemove (i, sel) {\n\t\t\t\tself.$pillGroup.find(sel).remove();\n\t\t\t});\n\n\t\t\tthis._removePillTrigger({\n\t\t\t\tmethod: 'removeBySelector',\n\t\t\t\tremovedSelectors: selectors\n\t\t\t});\n\t\t},\n\n\t\tremoveByValue: function removeByValue () {\n\t\t\tvar values = [].slice.call(arguments).slice(0);\n\t\t\tvar self = this;\n\n\t\t\tlangx.each(values, function doRemove (i, val) {\n\t\t\t\tself.$pillGroup.find('> .pill[data-value=\"' + val + '\"]').remove();\n\t\t\t});\n\n\t\t\tthis._removePillTrigger({\n\t\t\t\tmethod: 'removeByValue',\n\t\t\t\tremovedValues: values\n\t\t\t});\n\t\t},\n\n\t\tremoveByText: function removeByText () {\n\t\t\tvar text = [].slice.call(arguments).slice(0);\n\t\t\tvar self = this;\n\n\t\t\tlangx.each(text, function doRemove (i, matchingText) {\n\t\t\t\tself.$pillGroup.find('> .pill:contains(\"' + matchingText + '\")').remove();\n\t\t\t});\n\n\t\t\tthis._removePillTrigger({\n\t\t\t\tmethod: 'removeByText',\n\t\t\t\tremovedText: text\n\t\t\t});\n\t\t},\n\n\t\ttruncate: function truncate (enable) {\n\t\t\tvar self = this;\n\n\t\t\tthis.$element.removeClass('truncate');\n\t\t\tthis.$addItemWrap.removeClass('truncated');\n\t\t\tthis.$pillGroup.find('.pill').removeClass('truncated');\n\n\t\t\tif (enable) {\n\t\t\t\tthis.$element.addClass('truncate');\n\n\t\t\t\tvar availableWidth = this.$element.width();\n\t\t\t\tvar containerFull = false;\n\t\t\t\tvar processedPills = 0;\n\t\t\t\tvar totalPills = this.$pillGroup.find('.pill').length;\n\t\t\t\tvar widthUsed = 0;\n\n\t\t\t\tthis.$pillGroup.find('.pill').each(function processPills () {\n\t\t\t\t\tvar pill = $(this);\n\t\t\t\t\tif (!containerFull) {\n\t\t\t\t\t\tprocessedPills++;\n\t\t\t\t\t\tself.$moreCount.text(totalPills - processedPills);\n\t\t\t\t\t\tif ((widthUsed + pill.outerWidth(true) + self.$addItemWrap.outerWidth(true)) <= availableWidth) {\n\t\t\t\t\t\t\twidthUsed += pill.outerWidth(true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself.$moreCount.text((totalPills - processedPills) + 1);\n\t\t\t\t\t\t\tpill.addClass('truncated');\n\t\t\t\t\t\t\tcontainerFull = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpill.addClass('truncated');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (processedPills === totalPills) {\n\t\t\t\t\tthis.$addItemWrap.addClass('truncated');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tinputFocus: function inputFocus () {\n\t\t\tthis.$element.find('.pillbox-add-item').focus();\n\t\t},\n\n\t\tgetItemData: function getItemData (el, data) {\n\t\t\treturn langx.mixin({\n\t\t\t\ttext: el.find('span:first').html()\n\t\t\t}, el.data(), data);\n\t\t},\n\n\t\t_removeElement: function _removeElement (data) {\n\t\t\tdata.el.remove();\n\t\t\tdelete data.el;\n\t\t\tthis.$element.trigger('removed.fu.pillbox', data);\n\t\t},\n\n\t\t_removePillTrigger: function _removePillTrigger (removedBy) {\n\t\t\tthis.$element.trigger('removed.fu.pillbox', removedBy);\n\t\t},\n\n\t\t_generateObject: function _generateObject (data) {\n\t\t\tvar obj = {};\n\n\t\t\tlangx.each(data, function setObjectValue (index, value) {\n\t\t\t\tobj[value] = true;\n\t\t\t});\n\n\t\t\treturn obj;\n\t\t},\n\n\t\t_openSuggestions: function _openSuggestions (e, data) {\n\t\t\tvar $suggestionList = $('<ul>');\n\n\t\t\tif (this.callbackId !== e.timeStamp) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (data.data && data.data.length) {\n\t\t\t\tlangx.each(data.data, function appendSuggestions (index, value) {\n\t\t\t\t\tvar val = value.value ? value.value : value.text;\n\n\t\t\t\t\t// markup concatentation is 10x faster, but does not allow data store\n\t\t\t\t\tvar $suggestion = $('<li data-value=\"' + val + '\">' + value.text + '</li>');\n\n\t\t\t\t\tif (value.attr) {\n\t\t\t\t\t\t$suggestion.data('attr', JSON.stringify(value.attr));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (value.data) {\n\t\t\t\t\t\t$suggestion.data('data', value.data);\n\t\t\t\t\t}\n\n\t\t\t\t\t$suggestionList.append($suggestion);\n\t\t\t\t});\n\n\t\t\t\t// suggestion dropdown\n\t\t\t\tthis.$suggest.html('').append($suggestionList.children());\n\t\t\t\t$(document).trigger('suggested.fu.pillbox', this.$suggest);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\t_closeSuggestions: function _closeSuggestions () {\n\t\t\tthis.$suggest.html('').parent().removeClass('open');\n\t\t},\n\n\t\t_isSuggestionsOpen: function _isSuggestionsOpen () {\n\t\t\treturn this.$suggest.parent().hasClass('open');\n\t\t},\n\n\t\t_keySuggestions: function _keySuggestions (e) {\n\t\t\tvar $first = this.$suggest.find('li.pillbox-suggest-sel');\n\t\t\tvar dir = isUpArrow(e);\n\n\t\t\te.preventDefault();\n\n\t\t\tif (!$first.length) {\n\t\t\t\t$first = this.$suggest.find('li:first');\n\t\t\t\t$first.addClass('pillbox-suggest-sel');\n\t\t\t} else {\n\t\t\t\tvar $next = dir ? $first.prev() : $first.next();\n\n\t\t\t\tif (!$next.length) {\n\t\t\t\t\t$next = dir ? this.$suggest.find('li:last') : this.$suggest.find('li:first');\n\t\t\t\t}\n\n\t\t\t\tif ($next) {\n\t\t\t\t\t$next.addClass('pillbox-suggest-sel');\n\t\t\t\t\t$first.removeClass('pillbox-suggest-sel');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\n\tPillbox.prototype.getValue = Pillbox.prototype.items;\n\n\t// PILLBOX PLUGIN DEFINITION\n\n\t$.fn.pillbox = function pillbox (option) {\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\t\tvar methodReturn;\n\n\t\tvar $set = this.each(function set () {\n\t\t\tvar $this = $(this);\n\t\t\tvar data = $this.data('fu.pillbox');\n\t\t\tvar options = typeof option === 'object' && option;\n\n\t\t\tif (!data) {\n\t\t\t\t$this.data('fu.pillbox', (data = new Pillbox(this, options)));\n\t\t\t}\n\n\t\t\tif (typeof option === 'string') {\n\t\t\t\tmethodReturn = data[option].apply(data, args);\n\t\t\t}\n\t\t});\n\n\t\treturn (methodReturn === undefined) ? $set : methodReturn;\n\t};\n\n\t$.fn.pillbox.defaults = {\n\t\tedit: false,\n\t\treadonly: -1, // can be true or false. -1 means it will check for data-readonly=\"readonly\"\n\t\ttruncate: false,\n\t\tacceptKeyCodes: [\n\t\t\tENTER_KEYCODE,\n\t\t\tCOMMA_KEYCODE\n\t\t],\n\t\tallowEmptyPills: false,\n\t\tcleanInput: cleanInput\n\n\t\t// example on remove\n\t\t/* onRemove: function(data,callback){\n\t\t\tconsole.log('onRemove');\n\t\t\tcallback(data);\n\t\t} */\n\n\t\t// example on key down\n\t\t/* onKeyDown: function(event, data, callback ){\n\t\t\tcallback({data:[\n\t\t\t\t{text: Math.random(),value:'sdfsdfsdf'},\n\t\t\t\t{text: Math.random(),value:'sdfsdfsdf'}\n\t\t\t]});\n\t\t}\n\t\t*/\n\t\t// example onAdd\n\t\t/* onAdd: function( data, callback ){\n\t\t\tconsole.log(data, callback);\n\t\t\tcallback(data);\n\t\t} */\n\t};\n\n\t$.fn.pillbox.Constructor = Pillbox;\n\n\t$.fn.pillbox.noConflict = function noConflict () {\n\t\t$.fn.pillbox = old;\n\t\treturn this;\n\t};\n\n\n\t// DATA-API\n\n\t/*\n\t$(document).on('mousedown.fu.pillbox.data-api', '[data-initialize=pillbox]', function dataAPI (e) {\n\t\tvar $control = $(e.target).closest('.pillbox');\n\t\tif (!$control.data('fu.pillbox')) {\n\t\t\t$control.pillbox($control.data());\n\t\t}\n\t});\n\n\t// Must be domReady for AMD compatibility\n\t$(function DOMReady () {\n\t\t$('[data-initialize=pillbox]').each(function init () {\n\t\t\tvar $this = $(this);\n\t\t\tif ($this.data('fu.pillbox')) return;\n\t\t\t$this.pillbox($this.data());\n\t\t});\n\t});\n\t*/\n\n\treturn $.fn.pillbox;\n});\n"]}