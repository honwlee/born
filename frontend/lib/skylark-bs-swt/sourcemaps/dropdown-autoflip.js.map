{"version":3,"sources":["dropdown-autoflip.js"],"names":["define","langx","browser","eventer","noder","geom","$","_autoFlip","menu","css","visibility","dropUpCheck","parent","addClass","removeClass","element","$container","_getContainer","measurements","parentHeight","outerHeight","parentOffsetTop","offset","top","dropdownHeight","containerHeight","overflowElement","containerOffsetTop","isWindow","scrollTop","fromTop","fromBottom","containerElement","targetSelector","attr","each","parents","index","parentElement","window","document","on","event","this","data","flip","next","fn","dropdownautoflip"],"mappings":";;;;;;;AAAAA,QACE,sBACA,wBACA,wBACA,sBACA,qBACA,uBACA,SAASC,EAAMC,EAAQC,EAAQC,EAAMC,EAAKC,GAuB3C,QAASC,GAAUC,GAElBF,EAAEE,GAAMC,KACPC,WAAY,WAITC,EAAYH,GACfA,EAAKI,SAASC,SAAS,UAEvBL,EAAKI,SAASE,YAAY,UAI3BR,EAAEE,GAAMC,KACPC,WAAY,YAId,QAASC,GAAYI,GAEpB,GAAIC,GAAaC,EAAcF,GAG3BG,IAgBJ,OAfAA,GAAaC,aAAeJ,EAAQH,SAASQ,cAC7CF,EAAaG,gBAAkBN,EAAQH,SAASU,SAASC,IACzDL,EAAaM,eAAiBT,EAAQK,cACtCF,EAAaO,gBAAkBT,EAAWU,gBAAgBN,cAG1DF,EAAaS,mBAAwBX,EAAWY,SAAYZ,EAAWU,gBAAgBG,YAAcb,EAAWU,gBAAgBJ,SAASC,IAGzIL,EAAaY,QAAUZ,EAAaG,gBAAkBH,EAAaS,mBACnET,EAAaa,WAAab,EAAaO,gBAAkBP,EAAaC,cAAgBD,EAAaG,gBAAkBH,EAAaS,sBAK9HT,EAAaM,eAAiBN,EAAaa,cAEpCb,EAAaM,eAAiBN,EAAaY,UAE3CZ,EAAaM,gBAAkBN,EAAaY,SAAWZ,EAAaM,gBAAkBN,EAAaa,WAEzGb,EAAaY,SAAWZ,EAAaa,WAFnC,SAYR,QAASd,GAAcF,GACtB,GAEIiB,GAFAC,EAAiBlB,EAAQmB,KAAK,eAC9BN,GAAW,CAuBf,OApBIK,GAUwB,WAAnBA,IACRD,EAAmB1B,EAAE2B,GACrBL,GAAW,GAVX3B,EAAMkC,KAAKpB,EAAQqB,UAAW,SAAUC,EAAOC,GAC9C,GAAyC,YAArChC,EAAEgC,GAAe7B,IAAI,YAGxB,MAFAuB,GAAmBM,EACnBV,GAAW,GACJ,IAUNA,IACHI,EAAmBO,SAIlBb,gBAAiBpB,EAAE0B,GACnBJ,SAAUA,GAhGbtB,EAAEkC,UAAUC,GAAG,6BAA8B,oCAAqC,SAAUC,GAC/D,SAAxBpC,EAAEqC,MAAMC,OAAOC,MAElBtC,EAAUD,EAAEqC,MAAMG,KAAK,qBAKzBxC,EAAEkC,UAAUC,GAAG,uBAAwB,SAAUC,EAAO3B,GACvDR,EAAUD,EAAES,IACZT,EAAES,GAASH,SAASC,SAAS,UA2F9BP,EAAEyC,GAAGC,iBAAmB","file":"../dropdown-autoflip.js","sourcesContent":["define([\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/query\"\n],function(langx,browser,eventer,noder,geom,$){\n\n\t/*\n\t * Fuel UX Checkbox\n\t * https://github.com/ExactTarget/fuelux\n\t *\n\t * Copyright (c) 2014 ExactTarget\n\t * Licensed under the BSD New license.\n\t */\n\n\t$(document).on('click.fu.dropdown-autoflip', '[data-toggle=dropdown][data-flip]', function (event) {\n\t\tif ($(this).data().flip === \"auto\") {\n\t\t\t// have the drop down decide where to place itself\n\t\t\t_autoFlip($(this).next('.dropdown-menu'));\n\t\t}\n\t});\n\n\t// For pillbox suggestions dropdown\n\t$(document).on('suggested.fu.pillbox', function (event, element) {\n\t\t_autoFlip($(element));\n\t\t$(element).parent().addClass('open');\n\t});\n\n\tfunction _autoFlip(menu) {\n\t\t// hide while the browser thinks\n\t\t$(menu).css({\n\t\t\tvisibility: \"hidden\"\n\t\t});\n\n\t\t// decide where to put menu\n\t\tif (dropUpCheck(menu)) {\n\t\t\tmenu.parent().addClass(\"dropup\");\n\t\t} else {\n\t\t\tmenu.parent().removeClass(\"dropup\");\n\t\t}\n\n\t\t// show again\n\t\t$(menu).css({\n\t\t\tvisibility: \"visible\"\n\t\t});\n\t}\n\n\tfunction dropUpCheck(element) {\n\t\t// caching container\n\t\tvar $container = _getContainer(element);\n\n\t\t// building object with measurementsances for later use\n\t\tvar measurements = {};\n\t\tmeasurements.parentHeight = element.parent().outerHeight();\n\t\tmeasurements.parentOffsetTop = element.parent().offset().top;\n\t\tmeasurements.dropdownHeight = element.outerHeight();\n\t\tmeasurements.containerHeight = $container.overflowElement.outerHeight();\n\n\t\t// this needs to be different if the window is the container or another element is\n\t\tmeasurements.containerOffsetTop = (!!$container.isWindow) ? $container.overflowElement.scrollTop() : $container.overflowElement.offset().top;\n\n\t\t// doing the calculations\n\t\tmeasurements.fromTop = measurements.parentOffsetTop - measurements.containerOffsetTop;\n\t\tmeasurements.fromBottom = measurements.containerHeight - measurements.parentHeight - (measurements.parentOffsetTop - measurements.containerOffsetTop);\n\n\t\t// actual determination of where to put menu\n\t\t// false = drop down\n\t\t// true = drop up\n\t\tif (measurements.dropdownHeight < measurements.fromBottom) {\n\t\t\treturn false;\n\t\t} else if (measurements.dropdownHeight < measurements.fromTop) {\n\t\t\treturn true;\n\t\t} else if (measurements.dropdownHeight >= measurements.fromTop && measurements.dropdownHeight >= measurements.fromBottom) {\n\t\t\t// decide which one is bigger and put it there\n\t\t\tif (measurements.fromTop >= measurements.fromBottom) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction _getContainer(element) {\n\t\tvar targetSelector = element.attr('data-target');\n\t\tvar isWindow = true;\n\t\tvar containerElement;\n\n\t\tif(!targetSelector) {\n\t\t\t// no selection so find the relevant ancestor\n\t\t\tlangx.each(element.parents(), function (index, parentElement) {\n\t\t\t\tif ($(parentElement).css('overflow') !== 'visible') {\n\t\t\t\t\tcontainerElement = parentElement;\n\t\t\t\t\tisWindow = false;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (targetSelector !== 'window') {\n\t\t\tcontainerElement = $(targetSelector);\n\t\t\tisWindow = false;\n\t\t}\n\n\t\t// fallback to window\n\t\tif (isWindow) {\n\t\t\tcontainerElement = window;\n\t\t}\n\n\t\treturn {\n\t\t\t\toverflowElement: $(containerElement),\n\t\t\t\tisWindow: isWindow\n\t\t};\n\t}\n\n\t// register empty plugin\n\t$.fn.dropdownautoflip = function () {\n\t\t/* empty */\n\t};\n\n});\n"]}