{"version":3,"sources":["checkbox.js"],"names":["define","langx","browser","eventer","noder","geom","velm","$","sbswt","old","fn","checkbox","logError","error","window","console","Checkbox","WidgetBase","inherit","klassName","init","element","options","this","mixin","defaults","$element","tagName","toLowerCase","$label","$chk","find","$container","parent","ignoreVisibilityCheck","css","match","containerSelector","attr","$toggleContainer","on","proxy","itemchecked","setInitialState","checked","prop","disabled","setCheckedState","setDisabledState","$lbl","$containerToggle","addClass","removeClass","trigger","evt","target","toggle","isChecked","uncheck","check","enable","disable","destroy","remove","outerHTML","prototype","getValue","option","methodReturn","args","Array","slice","call","arguments","$set","each","$this","data","apply","undefined","Constructor","noConflict"],"mappings":"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","file":"../checkbox.js","sourcesContent":["define([\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"./sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,sbswt){\n\n\n\t/*\n\t * Fuel UX Checkbox\n\t * https://github.com/ExactTarget/fuelux\n\t *\n\t * Copyright (c) 2014 ExactTarget\n\t * Licensed under the BSD New license.\n\t */\n\n\tvar old = $.fn.checkbox;\n\n\t// CHECKBOX CONSTRUCTOR AND PROTOTYPE\n\n\tvar logError = function logError (error) {\n\t\tif (window && window.console && window.console.error) {\n\t\t\twindow.console.error(error);\n\t\t}\n\t};\n\n\n\tvar Checkbox = sbswt.Checkbox = sbswt.WidgetBase.inherit({\n\t\tklassName: \"Checkbox\",\n\n\t\tinit : function(element,options) {\n\t\t\tthis.options = langx.mixin({}, $.fn.checkbox.defaults, options);\n\t\t\tvar $element = $(element);\n\n\t\t\tif (element.tagName.toLowerCase() !== 'label') {\n\t\t\t\tlogError('Checkbox must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/checkbox.html for example of proper markup. Call `.checkbox()` on the `<label>` not the `<input>`');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// cache elements\n\t\t\tthis.$label = $element;\n\t\t\tthis.$chk = this.$label.find('input[type=\"checkbox\"]');\n\t\t\tthis.$container = $element.parent('.checkbox'); // the container div\n\n\t\t\tif (!this.options.ignoreVisibilityCheck && this.$chk.css('visibility').match(/hidden|collapse/)) {\n\t\t\t\tlogError('For accessibility reasons, in order for tab and space to function on checkbox, checkbox `<input />`\\'s `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.');\n\t\t\t}\n\n\t\t\t// determine if a toggle container is specified\n\t\t\tvar containerSelector = this.$chk.attr('data-toggle');\n\t\t\tthis.$toggleContainer = $(containerSelector);\n\n\t\t\t// handle internal events\n\t\t\tthis.$chk.on('change', langx.proxy(this.itemchecked, this));\n\n\t\t\t// set default state\n\t\t\tthis.setInitialState();\n\t\t},\n\n\t\tsetInitialState: function setInitialState () {\n\t\t\tvar $chk = this.$chk;\n\n\t\t\t// get current state of input\n\t\t\tvar checked = $chk.prop('checked');\n\t\t\tvar disabled = $chk.prop('disabled');\n\n\t\t\t// sync label class with input state\n\t\t\tthis.setCheckedState($chk, checked);\n\t\t\tthis.setDisabledState($chk, disabled);\n\t\t},\n\n\t\tsetCheckedState: function setCheckedState (element, checked) {\n\t\t\tvar $chk = element;\n\t\t\tvar $lbl = this.$label;\n\t\t\tvar $containerToggle = this.$toggleContainer;\n\n\t\t\tif (checked) {\n\t\t\t\t$chk.prop('checked', true);\n\t\t\t\t$lbl.addClass('checked');\n\t\t\t\t$containerToggle.removeClass('hide hidden');\n\t\t\t\t$lbl.trigger('checked.fu.checkbox');\n\t\t\t} else {\n\t\t\t\t$chk.prop('checked', false);\n\t\t\t\t$lbl.removeClass('checked');\n\t\t\t\t$containerToggle.addClass('hidden');\n\t\t\t\t$lbl.trigger('unchecked.fu.checkbox');\n\t\t\t}\n\n\t\t\t$lbl.trigger('changed.fu.checkbox', checked);\n\t\t},\n\n\t\tsetDisabledState: function setDisabledState (element, disabled) {\n\t\t\tvar $chk = $(element);\n\t\t\tvar $lbl = this.$label;\n\n\t\t\tif (disabled) {\n\t\t\t\t$chk.prop('disabled', true);\n\t\t\t\t$lbl.addClass('disabled');\n\t\t\t\t$lbl.trigger('disabled.fu.checkbox');\n\t\t\t} else {\n\t\t\t\t$chk.prop('disabled', false);\n\t\t\t\t$lbl.removeClass('disabled');\n\t\t\t\t$lbl.trigger('enabled.fu.checkbox');\n\t\t\t}\n\n\t\t\treturn $chk;\n\t\t},\n\n\t\titemchecked: function itemchecked (evt) {\n\t\t\tvar $chk = $(evt.target);\n\t\t\tvar checked = $chk.prop('checked');\n\n\t\t\tthis.setCheckedState($chk, checked);\n\t\t},\n\n\t\ttoggle: function toggle () {\n\t\t\tvar checked = this.isChecked();\n\n\t\t\tif (checked) {\n\t\t\t\tthis.uncheck();\n\t\t\t} else {\n\t\t\t\tthis.check();\n\t\t\t}\n\t\t},\n\n\t\tcheck: function check () {\n\t\t\tthis.setCheckedState(this.$chk, true);\n\t\t},\n\n\t\tuncheck: function uncheck () {\n\t\t\tthis.setCheckedState(this.$chk, false);\n\t\t},\n\n\t\tisChecked: function isChecked () {\n\t\t\tvar checked = this.$chk.prop('checked');\n\t\t\treturn checked;\n\t\t},\n\n\t\tenable: function enable () {\n\t\t\tthis.setDisabledState(this.$chk, false);\n\t\t},\n\n\t\tdisable: function disable () {\n\t\t\tthis.setDisabledState(this.$chk, true);\n\t\t},\n\n\t\tdestroy: function destroy () {\n\t\t\tthis.$label.remove();\n\t\t\treturn this.$label[0].outerHTML;\n\t\t}\n\t});\n\n\n\n\tCheckbox.prototype.getValue = Checkbox.prototype.isChecked;\n\n\t// CHECKBOX PLUGIN DEFINITION\n\n\t$.fn.checkbox = function checkbox (option) {\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\t\tvar methodReturn;\n\n\t\tvar $set = this.each(function applyData () {\n\t\t\tvar $this = $(this);\n\t\t\tvar data = $this.data('fu.checkbox');\n\t\t\tvar options = typeof option === 'object' && option;\n\n\t\t\tif (!data) {\n\t\t\t\t$this.data('fu.checkbox', (data = new Checkbox(this, options)));\n\t\t\t}\n\n\t\t\tif (typeof option === 'string') {\n\t\t\t\tmethodReturn = data[option].apply(data, args);\n\t\t\t}\n\t\t});\n\n\t\treturn (methodReturn === undefined) ? $set : methodReturn;\n\t};\n\n\t$.fn.checkbox.defaults = {\n\t\tignoreVisibilityCheck: false\n\t};\n\n\t$.fn.checkbox.Constructor = Checkbox;\n\n\t$.fn.checkbox.noConflict = function noConflict () {\n\t\t$.fn.checkbox = old;\n\t\treturn this;\n\t};\n\n\t// DATA-API\n\n\t/*\n\t$(document).on('mouseover.fu.checkbox.data-api', '[data-initialize=checkbox]', function initializeCheckboxes (e) {\n\t\tvar $control = $(e.target);\n\t\tif (!$control.data('fu.checkbox')) {\n\t\t\t$control.checkbox($control.data());\n\t\t}\n\t});\n\n\t// Must be domReady for AMD compatibility\n\t$(function onReadyInitializeCheckboxes () {\n\t\t$('[data-initialize=checkbox]').each(function initializeCheckbox () {\n\t\t\tvar $this = $(this);\n\t\t\tif (!$this.data('fu.checkbox')) {\n\t\t\t\t$this.checkbox($this.data());\n\t\t\t}\n\t\t});\n\t});\n\t*/\n\n\treturn $.fn.checkbox;\n});\n"]}