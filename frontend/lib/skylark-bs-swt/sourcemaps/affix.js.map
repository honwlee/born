{"version":3,"sources":["affix.js"],"names":["define","langx","browser","eventer","noder","geom","velm","$","sbswt","Plugin","option","this","each","$this","data","options","Affix","WidgetBase","inherit","klassName","init","element","mixin","DEFAULTS","$target","target","on","proxy","checkPosition","checkPositionWithEventLoop","$element","affixed","unpin","pinnedOffset","getState","scrollHeight","height","offsetTop","offsetBottom","scrollTop","position","offset","targetHeight","top","initializing","colliderTop","colliderHeight","getPinnedOffset","removeClass","RESET","addClass","setTimeout","is","bottom","Math","max","document","body","affix","css","affixType","e","create","trigger","isDefaultPrevented","replace","VERSION","window","old","fn","Constructor","noConflict"],"mappings":"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","file":"../affix.js","sourcesContent":["define([\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"./sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,sbswt){\n\n\n/* ========================================================================\n * Bootstrap: affix.js v3.3.7\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = sbswt.Affix = sbswt.WidgetBase.inherit({\n        klassName: \"Affix\",\n\n        init : function(element,options) {\n          this.options = langx.mixin({}, Affix.DEFAULTS, options)\n\n          this.$target = $(this.options.target)\n            .on('scroll.bs.affix.data-api', langx.proxy(this.checkPosition, this))\n            .on('click.bs.affix.data-api',  langx.proxy(this.checkPositionWithEventLoop, this))\n\n          this.$element     = $(element)\n          this.affixed      = null;\n          this.unpin        = null;\n          this.pinnedOffset = null;\n\n          this.checkPosition();\n        },\n\n        getState : function (scrollHeight, height, offsetTop, offsetBottom) {\n          var scrollTop    = this.$target.scrollTop()\n          var position     = this.$element.offset()\n          var targetHeight = this.$target.height()\n\n          if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n          if (this.affixed == 'bottom') {\n            if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n            return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n          }\n\n          var initializing   = this.affixed == null\n          var colliderTop    = initializing ? scrollTop : position.top\n          var colliderHeight = initializing ? targetHeight : height\n\n          if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n          if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n          return false\n        },\n\n        getPinnedOffset : function () {\n          if (this.pinnedOffset) return this.pinnedOffset\n          this.$element.removeClass(Affix.RESET).addClass('affix')\n          var scrollTop = this.$target.scrollTop()\n          var position  = this.$element.offset()\n          return (this.pinnedOffset = position.top - scrollTop)\n        },\n\n        checkPositionWithEventLoop : function () {\n          setTimeout(langx.proxy(this.checkPosition, this), 1)\n        },\n\n        checkPosition : function () {\n          if (!this.$element.is(':visible')) return\n\n          var height       = this.$element.height()\n          var offset       = this.options.offset\n          var offsetTop    = offset.top\n          var offsetBottom = offset.bottom\n          var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n          if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n          if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n          if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n          var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n          if (this.affixed != affix) {\n            if (this.unpin != null) this.$element.css('top', '')\n\n            var affixType = 'affix' + (affix ? '-' + affix : '')\n            var e         = eventer.create(affixType + '.bs.affix')\n\n            this.$element.trigger(e)\n\n            if (e.isDefaultPrevented()) return\n\n            this.affixed = affix\n            this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n            this.$element\n              .removeClass(Affix.RESET)\n              .addClass(affixType)\n              .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n          }\n\n          if (affix == 'bottom') {\n            this.$element.offset({\n              top: scrollHeight - height - offsetBottom\n            })\n          }\n        }\n  });\n\n\n  Affix.VERSION  = '3.3.7'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n\n\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin;\n  $.fn.affix.Constructor = Affix;\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  // AFFIX DATA-API\n  // ==============\n  /*\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n      var data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n\n      Plugin.call($spy, data)\n    })\n  })\n  */\n\n  return $.fn.affix;\n});\n"]}